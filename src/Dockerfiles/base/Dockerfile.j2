{{ edit_comment }}

FROM wayofdev/ansible:builder-alpine-latest as builder

FROM alpine:{{ alpine_version }} as production

# Labels
# https://github.com/opencontainers/image-spec/blob/main/annotations.md
LABEL "maintainer"="lotyp <lotyp7@gmail.com>"
LABEL "vendor"="wayofdev"
LABEL "org.opencontainers.image.authors"="lotyp <lotyp7@gmail.com>"
LABEL "org.opencontainers.image.url"="https://hub.docker.com/r/wayofdev/ansible-{{ level }}"
LABEL "org.opencontainers.image.documentation"="https://github.com/wayofdev/docker-ansible"
LABEL "org.opencontainers.image.source"="https://github.com/wayofdev/docker-ansible"
LABEL "org.opencontainers.image.vendor"="wayofdev"
LABEL "org.opencontainers.image.licenses"="MIT"
LABEL "org.opencontainers.image.ref.name"="ansible-{{ level }}"
LABEL "org.opencontainers.image.title"="ansible-{{ level }}"
LABEL "org.opencontainers.image.description"="ansible-{{ level }}"

ENV LANG="en_US.UTF-8"
ENV LC_ALL="en_US.UTF-8"
ENV LANGUAGE="en_US.UTF-8"

# Define uid/gid and user/group names
ENV MY_USER="{{ os_user }}"
ENV MY_GROUP="{{ os_group }}"
ENV MY_UID={{ os_user_id }}
ENV MY_GID={{ os_group_id }}

RUN set -eux; \
    apk -U upgrade -a \
    && apk add --no-cache \
        # libgcc required for ansible-vault
		libgcc \
		py3-pip \
		python3 \
        yaml \
    # Extra Tools
    && apk add --no-cache \
        curl \
        git \
        bash \
        jq \
    && ln -sf /usr/bin/python3 /usr/bin/python \
	&& ln -sf ansible /usr/bin/ansible-config \
	&& ln -sf ansible /usr/bin/ansible-console \
	&& ln -sf ansible /usr/bin/ansible-doc \
	&& ln -sf ansible /usr/bin/ansible-galaxy \
	&& ln -sf ansible /usr/bin/ansible-inventory \
	&& ln -sf ansible /usr/bin/ansible-playbook \
	&& ln -sf ansible /usr/bin/ansible-pull \
	&& ln -sf ansible /usr/bin/ansible-test \
	&& ln -sf ansible /usr/bin/ansible-vault \
    # Clean up some space
	&& find /usr/lib/ -name '__pycache__' -print0 | xargs -0 -n1 rm -rf \
	&& find /usr/lib/ -name '*.pyc' -print0 | xargs -0 -n1 rm -rf

COPY --from=builder /usr/lib/python3.10/site-packages/ /usr/lib/python3.10/site-packages/
COPY --from=builder /usr/bin/ansible /usr/bin/ansible
COPY --from=builder /usr/bin/ansible-connection /usr/bin/ansible-connection
COPY ./configs/docker-entrypoint.sh /docker-entrypoint.sh

RUN set -eux \
	# Create user, group and home dir
	&& addgroup -g ${MY_GID} ${MY_GROUP} \
	&& adduser -h /home/${MY_USER} -s /bin/bash -G ${MY_GROUP} -D -u ${MY_UID} ${MY_USER} \
    # Pre-compile Python for better performance
	&& python3 -m compileall /usr/lib/python3.10 \
	&& chmod +x /docker-entrypoint.sh

WORKDIR /app

ENTRYPOINT ["/docker-entrypoint.sh"]
CMD ["/bin/bash"]
